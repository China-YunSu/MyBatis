<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="db.properties"/>


    <settings>
        <!--  日志设置：logImpl
              指定 MyBatis 所用日志的具体实现，未指定时将自动查找
              SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING
              STDOUT_LOGGING 标准日志
        -->
<!--        <setting name="logImpl" value="STDOUT_LOGGING"/>-->
<!--            什么是log4j？-->
<!--            使用log4j，我们可以控制日志信息输送-->
<!--            的目的地是控制台、文件、GUI
                控制每一条日志输出格式；
                通过定义每一条日志信息的级别，
                我们能够更加细致的控制日志的生成过程。
                可以通过配置文件设置
            -->
            <setting name="logImpl" value="LOG4J"/>
    </settings>

<!--    类其别名-->
    <typeAliases>
        <typeAlias type="man.kuke.model.Person" alias="Person"/>
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
<!--                url connection 8 版本以上 时区 设置 serverTimezone=UTC-->
<!--                &amp;转义字符-->
<!--                jdbc:mysql://localhost:3306/myemployees?useSSL=true&amp;userUnicode=true&amp-->
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>


    <mappers>
<!--    Maven资源导出问题 解决配置文件无法找到-->
<!--        资源过滤设置-->
<!--        <resources>-->
<!--             <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                <includes>-->
<!--                    <include>**/*.properties</include>-->
<!--                    <include>**/*.xml</include>-->
<!--                </includes>-->
<!--                <filtering>true</filtering>-->
<!--            </resource>-->
<!--            <resource>-->
<!--                <directory>src/main/java</directory>-->
<!--                <includes>-->
<!--                    <include>**/*.properties</include>-->
<!--                    <include>**/*.xml</include>-->
<!--                </includes>-->
<!--                <filtering>true</filtering>-->
<!--            </resource>-->

<!--        </resources>-->
        <!--    每一个Mapper.xml 都需要在mybatis核心配置文件中注册-->
        <mapper resource="man/kuke/dao/UserMapper.xml"/>

<!--
  推荐：   方式一：
                <mapper resource="man/kuke/dao/UserMapper.xml"/>
           方式二：
           使用class文件绑定注册
           <mapper class="man.kuke.dao.UserMapper"/>

           注意点：
           接口和他的Mapper配置文件必须同名
           接口和他的Mapper配置文件必须在同一个包下

           方式三：使用扫描包进行注入绑定
           <mappers>
                <package name="man.kuke.dao"/>
           </mappers>
           注意点：
           接口和他的Mapper配置文件必须同名
           接口和他的Mapper配置文件必须在同一个包下
  -->
    </mappers>
</configuration>